// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Infrastructure stack match snapshot 1`] = `
Object {
  "Mappings": Object {
    "AWSCloudFrontPartitionHostedZoneIdMap": Object {
      "aws": Object {
        "zoneId": "Z2FDTNDATAQYW2",
      },
      "aws-cn": Object {
        "zoneId": "Z3RFFRIM2A3IF5",
      },
    },
  },
  "Outputs": Object {
    "Bucket": Object {
      "Value": Object {
        "Ref": "WillwinWangBucket84076186",
      },
    },
    "CertificateArn": Object {
      "Value": Object {
        "Fn::GetAtt": Array [
          "sitecertificateCertificateRequestorResource63154552",
          "Arn",
        ],
      },
    },
    "CertificateRegion": Object {
      "Value": "ap-southeast-2",
    },
    "CloudFrontDistributionDomainName": Object {
      "Value": Object {
        "Fn::GetAtt": Array [
          "WillwinWangCloudfrontCFDistribution7C69B42D",
          "DomainName",
        ],
      },
    },
    "DistributionId": Object {
      "Value": Object {
        "Ref": "WillwinWangCloudfrontCFDistribution7C69B42D",
      },
    },
    "Site": Object {
      "Value": "foo.com",
    },
  },
  "Parameters": Object {
    "AssetParameters19e461d2ff1a5b90438fed6ceee4c197d7efee8712a6f76d85b501ab20bfb1a2ArtifactHash652C125C": Object {
      "Description": "Artifact hash for asset \\"19e461d2ff1a5b90438fed6ceee4c197d7efee8712a6f76d85b501ab20bfb1a2\\"",
      "Type": "String",
    },
    "AssetParameters19e461d2ff1a5b90438fed6ceee4c197d7efee8712a6f76d85b501ab20bfb1a2S3BucketFCCD3A76": Object {
      "Description": "S3 bucket for asset \\"19e461d2ff1a5b90438fed6ceee4c197d7efee8712a6f76d85b501ab20bfb1a2\\"",
      "Type": "String",
    },
    "AssetParameters19e461d2ff1a5b90438fed6ceee4c197d7efee8712a6f76d85b501ab20bfb1a2S3VersionKey07AF06B6": Object {
      "Description": "S3 key for asset version \\"19e461d2ff1a5b90438fed6ceee4c197d7efee8712a6f76d85b501ab20bfb1a2\\"",
      "Type": "String",
    },
    "AssetParameters9537be6d289c64f0b9fff599dd800bde3f5a98263197eb664ff7fc45a34d302fArtifactHash0E1A12CA": Object {
      "Description": "Artifact hash for asset \\"9537be6d289c64f0b9fff599dd800bde3f5a98263197eb664ff7fc45a34d302f\\"",
      "Type": "String",
    },
    "AssetParameters9537be6d289c64f0b9fff599dd800bde3f5a98263197eb664ff7fc45a34d302fS3Bucket9DF680ED": Object {
      "Description": "S3 bucket for asset \\"9537be6d289c64f0b9fff599dd800bde3f5a98263197eb664ff7fc45a34d302f\\"",
      "Type": "String",
    },
    "AssetParameters9537be6d289c64f0b9fff599dd800bde3f5a98263197eb664ff7fc45a34d302fS3VersionKeyEEED3FB7": Object {
      "Description": "S3 key for asset version \\"9537be6d289c64f0b9fff599dd800bde3f5a98263197eb664ff7fc45a34d302f\\"",
      "Type": "String",
    },
    "AssetParametersc9ac4b3b65f3510a2088b7fd003de23d2aefac424025eb168725ce6769e3c176ArtifactHash4E343C6C": Object {
      "Description": "Artifact hash for asset \\"c9ac4b3b65f3510a2088b7fd003de23d2aefac424025eb168725ce6769e3c176\\"",
      "Type": "String",
    },
    "AssetParametersc9ac4b3b65f3510a2088b7fd003de23d2aefac424025eb168725ce6769e3c176S3Bucket77147E20": Object {
      "Description": "S3 bucket for asset \\"c9ac4b3b65f3510a2088b7fd003de23d2aefac424025eb168725ce6769e3c176\\"",
      "Type": "String",
    },
    "AssetParametersc9ac4b3b65f3510a2088b7fd003de23d2aefac424025eb168725ce6769e3c176S3VersionKey4253216F": Object {
      "Description": "S3 key for asset version \\"c9ac4b3b65f3510a2088b7fd003de23d2aefac424025eb168725ce6769e3c176\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536": Object {
      "DependsOn": Array [
        "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
        "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParametersc9ac4b3b65f3510a2088b7fd003de23d2aefac424025eb168725ce6769e3c176S3Bucket77147E20",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersc9ac4b3b65f3510a2088b7fd003de23d2aefac424025eb168725ce6769e3c176S3VersionKey4253216F",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersc9ac4b3b65f3510a2088b7fd003de23d2aefac424025eb168725ce6769e3c176S3VersionKey4253216F",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
            "Arn",
          ],
        },
        "Runtime": "python3.6",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      Object {
                        "Ref": "AssetParameters9537be6d289c64f0b9fff599dd800bde3f5a98263197eb664ff7fc45a34d302fS3Bucket9DF680ED",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      Object {
                        "Ref": "AssetParameters9537be6d289c64f0b9fff599dd800bde3f5a98263197eb664ff7fc45a34d302fS3Bucket9DF680ED",
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "WillwinWangBucket84076186",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "WillwinWangBucket84076186",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "cloudfront:GetInvalidation",
                "cloudfront:CreateInvalidation",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
        "Roles": Array [
          Object {
            "Ref": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DeployWithInvalidationCustomResourceE3FF7455": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "DestinationBucketName": Object {
          "Ref": "WillwinWangBucket84076186",
        },
        "DistributionId": Object {
          "Ref": "WillwinWangCloudfrontCFDistribution7C69B42D",
        },
        "DistributionPaths": Array [
          "/*",
        ],
        "Prune": true,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536",
            "Arn",
          ],
        },
        "SourceBucketNames": Array [
          Object {
            "Ref": "AssetParameters9537be6d289c64f0b9fff599dd800bde3f5a98263197eb664ff7fc45a34d302fS3Bucket9DF680ED",
          },
        ],
        "SourceObjectKeys": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters9537be6d289c64f0b9fff599dd800bde3f5a98263197eb664ff7fc45a34d302fS3VersionKeyEEED3FB7",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters9537be6d289c64f0b9fff599dd800bde3f5a98263197eb664ff7fc45a34d302fS3VersionKeyEEED3FB7",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        ],
      },
      "Type": "Custom::CDKBucketDeployment",
      "UpdateReplacePolicy": "Delete",
    },
    "DomainSiteAliasRecord90016544": Object {
      "Properties": Object {
        "AliasTarget": Object {
          "DNSName": Object {
            "Fn::GetAtt": Array [
              "WillwinWangCloudfrontCFDistribution7C69B42D",
              "DomainName",
            ],
          },
          "HostedZoneId": Object {
            "Fn::FindInMap": Array [
              "AWSCloudFrontPartitionHostedZoneIdMap",
              Object {
                "Ref": "AWS::Partition",
              },
              "zoneId",
            ],
          },
        },
        "HostedZoneId": "DUMMY",
        "Name": "foo.com.",
        "Type": "A",
      },
      "Type": "AWS::Route53::RecordSet",
    },
    "OIAE39B2685": Object {
      "Properties": Object {
        "CloudFrontOriginAccessIdentityConfig": Object {
          "Comment": "OIA for Willwin Wang website.",
        },
      },
      "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
    },
    "SubDomainSiteAliasRecord89328707": Object {
      "Properties": Object {
        "AliasTarget": Object {
          "DNSName": Object {
            "Fn::GetAtt": Array [
              "WillwinWangCloudfrontCFDistribution7C69B42D",
              "DomainName",
            ],
          },
          "HostedZoneId": Object {
            "Fn::FindInMap": Array [
              "AWSCloudFrontPartitionHostedZoneIdMap",
              Object {
                "Ref": "AWS::Partition",
              },
              "zoneId",
            ],
          },
        },
        "HostedZoneId": "DUMMY",
        "Name": "www.foo.com.",
        "Type": "A",
      },
      "Type": "AWS::Route53::RecordSet",
    },
    "WillwinWangBucket84076186": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "BucketName": "foo.com",
        "WebsiteConfiguration": Object {
          "ErrorDocument": "index.html",
          "IndexDocument": "index.html",
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "WillwinWangBucketPolicy676CF8C0": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "WillwinWangBucket84076186",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "CanonicalUser": Object {
                  "Fn::GetAtt": Array [
                    "OIAE39B2685",
                    "S3CanonicalUserId",
                  ],
                },
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "WillwinWangBucket84076186",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "WillwinWangBucket84076186",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "WillwinWangCloudfrontCFDistribution7C69B42D": Object {
      "Properties": Object {
        "DistributionConfig": Object {
          "Aliases": Array [
            "foo.com",
            "www.foo.com",
          ],
          "CustomErrorResponses": Array [
            Object {
              "ErrorCode": 403,
              "ResponseCode": 200,
              "ResponsePagePath": "/index.html",
            },
            Object {
              "ErrorCode": 404,
              "ResponseCode": 200,
              "ResponsePagePath": "/index.html",
            },
          ],
          "DefaultCacheBehavior": Object {
            "AllowedMethods": Array [
              "GET",
              "HEAD",
            ],
            "CachedMethods": Array [
              "GET",
              "HEAD",
            ],
            "Compress": true,
            "ForwardedValues": Object {
              "Cookies": Object {
                "Forward": "none",
              },
              "QueryString": false,
            },
            "TargetOriginId": "origin1",
            "ViewerProtocolPolicy": "redirect-to-https",
          },
          "DefaultRootObject": "index.html",
          "Enabled": true,
          "HttpVersion": "http2",
          "IPV6Enabled": true,
          "Origins": Array [
            Object {
              "ConnectionAttempts": 3,
              "ConnectionTimeout": 10,
              "DomainName": Object {
                "Fn::GetAtt": Array [
                  "WillwinWangBucket84076186",
                  "RegionalDomainName",
                ],
              },
              "Id": "origin1",
              "S3OriginConfig": Object {
                "OriginAccessIdentity": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "origin-access-identity/cloudfront/",
                      Object {
                        "Ref": "OIAE39B2685",
                      },
                    ],
                  ],
                },
              },
            },
          ],
          "PriceClass": "PriceClass_200",
          "ViewerCertificate": Object {
            "AcmCertificateArn": Object {
              "Fn::GetAtt": Array [
                "sitecertificateCertificateRequestorResource63154552",
                "Arn",
              ],
            },
            "MinimumProtocolVersion": "TLSv1.2_2019",
            "SslSupportMethod": "sni-only",
          },
        },
      },
      "Type": "AWS::CloudFront::Distribution",
    },
    "sitecertificateCertificateRequestorFunctionF2BFE851": Object {
      "DependsOn": Array [
        "sitecertificateCertificateRequestorFunctionServiceRoleDefaultPolicy2A5867A4",
        "sitecertificateCertificateRequestorFunctionServiceRole9526EF2D",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters19e461d2ff1a5b90438fed6ceee4c197d7efee8712a6f76d85b501ab20bfb1a2S3BucketFCCD3A76",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters19e461d2ff1a5b90438fed6ceee4c197d7efee8712a6f76d85b501ab20bfb1a2S3VersionKey07AF06B6",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters19e461d2ff1a5b90438fed6ceee4c197d7efee8712a6f76d85b501ab20bfb1a2S3VersionKey07AF06B6",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Handler": "index.certificateRequestHandler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "sitecertificateCertificateRequestorFunctionServiceRole9526EF2D",
            "Arn",
          ],
        },
        "Runtime": "nodejs10.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "sitecertificateCertificateRequestorFunctionServiceRole9526EF2D": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "sitecertificateCertificateRequestorFunctionServiceRoleDefaultPolicy2A5867A4": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "acm:RequestCertificate",
                "acm:DescribeCertificate",
                "acm:DeleteCertificate",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "route53:GetChange",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "route53:changeResourceRecordSets",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":route53:::hostedzone/DUMMY",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "sitecertificateCertificateRequestorFunctionServiceRoleDefaultPolicy2A5867A4",
        "Roles": Array [
          Object {
            "Ref": "sitecertificateCertificateRequestorFunctionServiceRole9526EF2D",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "sitecertificateCertificateRequestorResource63154552": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "DomainName": "foo.com",
        "HostedZoneId": "DUMMY",
        "Region": "us-east-1",
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "sitecertificateCertificateRequestorFunctionF2BFE851",
            "Arn",
          ],
        },
        "SubjectAlternativeNames": Array [
          "www.foo.com",
        ],
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
  },
}
`;
